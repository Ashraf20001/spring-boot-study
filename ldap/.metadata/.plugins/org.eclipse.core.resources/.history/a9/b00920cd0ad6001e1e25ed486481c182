package com.demo.ldap.utils;

import java.util.Date;
import java.util.Map;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.core.Authentication;
import org.springframework.security.ldap.userdetails.LdapUserDetailsImpl;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.core.JsonProcessingException;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

@Component
public class JwtUtils {

	/**
	 * jwtSecret
	 */
	@Value("${jwt.jwtSecret}")
	private String jwtSecret;

	/**
	 * jwtExpirationMs
	 */
	@Value("${jwt.jwtExpirationMs}")
	private int jwtExpirationMs;
	
	public String generateJwtToken(Authentication authentication)
			throws JsonProcessingException {

		LdapUserDetailsImpl userPrincipal = (LdapUserDetailsImpl) authentication.getPrincipal();
		Map<String, Object> claims = buildMapForClaims(userPrincipal);
		return Jwts.builder().setSubject((userPrincipal.getUsername())).addClaims(claims).setIssuedAt(new Date())
				.setExpiration(new Date((new Date()).getTime() + jwtExpirationMs))
				.signWith(SignatureAlgorithm.HS512, jwtSecret).compact();
	}

	private Map<String, Object> buildMapForClaims(LdapUserDetailsImpl userPrincipal) {
		Map<String, Object> claimMap = Map.of("Distinguished Name",userPrincipal.getDn(),"User Name",userPrincipal.getUsername());
		return claimMap;
	}
}
